<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--
    XML 配置文件（configuration XML）中包含了对 MyBatis 系统的核心设置，
    包含获取数据库连接实例的数据源（DataSource）和决定事务作用域和控制方式的事务管理器（TransactionManager）。
    注意：
    配置文件一定要按照以下顺序放置，否则会报错Caused by: org.xml.sax.SAXParseException; lineNumber: 46; columnNumber: 17; 元素类型为 "configuration" 的内容必须匹配 "(properties?...
    properties?,
    settings?,
    typeAliases?,
    typeHandlers?,
    objectFactory?,
    objectWrapperFactory?,
    reflectorFactory?,
    plugins?,
    environments?,
    databaseIdProvider?,
    mappers?
    -->

    <!-- 与spring整合之后，该配置文件中只需要必要配置，其余的交给spring -->
    <settings>
        <!-- 开启全局二级缓存 -->
        <setting name="cacheEnabled" value="true"/>
        <!-- SESSION：默认值，启用一级缓存。STATEMENT：禁用一级缓存。 -->
        <!--<setting name="localCacheScope" value="SESSION"/>-->
        <!-- 设置驱动程序等待数据库响应的秒数 -->
        <setting name="defaultStatementTimeout" value="30"/>
        <!-- 启用从经典数据库列名A_COLUMN到驼峰式经典Java属性名称aColumn的自动映射 -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!-- 允许JDBC支持生成的主键。 需要兼容的驱动程序。如果设置为true，此设置会强制使用生成的键-->
        <setting name="useGeneratedKeys" value="true"/>
        <!-- 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。 -->
        <setting name="jdbcTypeForNull" value="NULL"/>
        <!-- DeBug -->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
        <!-- 延迟加载 -->
        <!--<setting name="lazyLoadingEnabled" value="true"/>-->
        <!-- 当开启时，任何方法的调用都会加载该对象的所有属性。否则，每个属性会按需加载 -->
        <!--<setting name="aggressiveLazyLoading" value="false"/>-->
    </settings>

</configuration>